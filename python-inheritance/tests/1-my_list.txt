The ``1-my_list`` module
==============================

Using ``MyList``
----------------

Import class from module:
    >>> MyList = __import__('1-my_list').MyList

Basic valid test cases
----------------------
Test printing a sorted empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test printing a sorted list with one element:
    >>> my_list = MyList([5])
    >>> my_list.print_sorted()
    [5]

Test printing a sorted list with multiple elements:
    >>> my_list = MyList([3, 1, 4, 1, 5, 9, 2])
    >>> my_list.print_sorted()
    [1, 1, 2, 3, 4, 5, 9]

Test printing a sorted list with negative numbers:
    >>> my_list = MyList([-3, -1, -4, -2])
    >>> my_list.print_sorted()
    [-4, -3, -2, -1]

Test printing a sorted list with duplicate numbers:
    >>> my_list = MyList([2, 2, 2, 2])
    >>> my_list.print_sorted()
    [2, 2, 2, 2]

Test printing a sorted list with already sorted numbers:
    >>> my_list = MyList([1, 2, 3, 4, 5])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test printing a sorted list with reverse-sorted numbers:
    >>> my_list = MyList([5, 4, 3, 2, 1])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test printing a sorted list with mixed positive and negative numbers:
    >>> my_list = MyList([3, -1, 0, -3, 2, -2, 1])
    >>> my_list.print_sorted()
    [-3, -2, -1, 0, 1, 2, 3]

Edge cases
----------
Test with an empty list:
    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

